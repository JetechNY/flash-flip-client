[{"/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/containers/CategoryContainer.js":"1","/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/containers/MainContainer.js":"2","/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/components/FavList.js":"3","/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/components/FlashCard.js":"4","/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/containers/CardContainer.js":"5"},{"size":1265,"mtime":1606866509370,"results":"6","hashOfConfig":"7"},{"size":5817,"mtime":1606866613585,"results":"8","hashOfConfig":"7"},{"size":1466,"mtime":1606867025706,"results":"9","hashOfConfig":"7"},{"size":1945,"mtime":1606867797027,"results":"10","hashOfConfig":"7"},{"size":2360,"mtime":1606868749958,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"uv6owz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/containers/CategoryContainer.js",["24"],"/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/containers/MainContainer.js",["25"],"import React from 'react'\nimport CategoryContainer from './CategoryContainer'\nimport CardContainer from './CardContainer'\nimport { Container } from 'semantic-ui-react'\nimport GameContainer from './GameContainer'\nimport { Button } from 'semantic-ui-react'\nimport FavList from '../components/FavList'\n\nclass MainContainer extends React.Component {\n\n    state = {\n        filteredCategory: '',\n        filteredCards: [],\n        gameState: false,\n        categories: [],\n        filteredCategories: [],\n        showCategoryForm: false,\n        favList: false\n    }\n\n    fetchCategories = () => {\n        fetch(`http://localhost:3000/users/${this.props.user.id}`, {\n            method: \"GET\",\n            headers: {Authorization: `Bearer ${this.props.jwt}`}\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({\n                categories: data.user.categories,\n                filteredCategories: data.user.categories\n            })\n        })\n        .catch(err => console.log(err))\n    }\n\n    componentDidMount(){\n        if (this.props.user.id) this.fetchCategories()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.user.id !== this.props.user.id && this.props.user.id) this.fetchCategories()\n    }\n\n    addCategory = (categoryObj) => {\n        fetch(`http://localhost:3000/categories`,{\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({...categoryObj, user_id: this.props.user.id})\n            })\n            .then(r => r.json())\n            .then(data => this.setState(prevState => {\n                return ({\n                    categories: [...prevState.categories, data],\n                    filteredCategories: [...prevState.filteredCategories, data],\n                    showCategoryForm: false,\n                    filteredCategory: data,\n                    filteredCards: []\n                })\n            }))\n    }\n\n\n    handleFilterCards = (filteredCategory) => {\n        this.setState({\n            filteredCategory: filteredCategory,\n            filteredCards: filteredCategory.cards,\n            favList: false\n        })\n    }\n\n    handleAddCard = (newCard) => {\n        this.setState(prevState => {\n            return ({filteredCards: [...prevState.filteredCards, newCard]})\n        })\n    }\n\n    handleGameState = () => {\n        this.setState(prevState => {\n            return ({gameState: !prevState.gameState})\n        })\n    }\n\n    handleFavCardList =() => {\n        this.setState(prevState => {\n            return ({\n                favList: !prevState.favList,\n                filteredCategory: \"\"\n                })\n    })\n    }\n\n    handleDeleteCard = (cardId) => {\n        let newFilteredCards = [...this.state.filteredCards]\n        const matchedCardIndex = newFilteredCards.findIndex(card => card.id === cardId)\n        newFilteredCards.splice(matchedCardIndex, 1)\n        this.setState({filteredCards: newFilteredCards})\n    }\n\n    handleDeleteCategory = (categoryId) => {\n        fetch(`http://localhost:3000/categories/${categoryId}`, {\n            method: 'DELETE',\n            headers: {Authorization: `Bearer ${this.props.jwt}`}\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data, \"success!\")\n            let newFilteredCategories = [...this.state.filteredCategories]\n            const matchedCatIndex = newFilteredCategories.findIndex(cat => cat.id === categoryId)\n            newFilteredCategories.splice(matchedCatIndex, 1)\n            this.setState({categories: newFilteredCategories, filteredCategories: newFilteredCategories,filteredCategory: '',filteredCards: [],})\n        })\n        .catch(err => console.log(err))\n    }\n\n    handleCategorySearchChange = (e) => {\n        this.setState({\n            filteredCategories: this.state.categories\n        });\n\n        this.setState({\n            filteredCategories: this.filteredCategory(e.target.value)\n        });\n    }\n\n    filteredCategory = (searchTerm) => this.state.categories.filter(cat => cat.name.toLowerCase().includes(searchTerm.toLowerCase()))\n\n    handleShowCategoryForm =() => {\n        this.setState(prevState => {\n            return({showCategoryForm: !prevState.showCategoryForm})\n        })\n    }\n\n    render() {\n        return (\n            <Container>\n                <div className=\"main-container\">\n                    {this.state.gameState ?\n\n                    <GameContainer cards={this.state.filteredCards} handleGameState={this.handleGameState}/>\n                    :\n                    <>\n                        <CategoryContainer favList={this.state.favList} handleFavCardList={this.handleFavCardList} handleFilterCards={this.handleFilterCards} categories={this.state.categories} filteredCategories={this.state.filteredCategories} showCategoryForm={this.state.showCategoryForm} filteredCategory={this.filteredCategory} handleCategorySearchChange={this.handleCategorySearchChange} handleShowCategoryForm={this.handleShowCategoryForm} addCategory={this.addCategory}/>\n                        {this.state.filteredCategory ? <CardContainer filteredCategory={this.state.filteredCategory} filteredCards={this.state.filteredCards} handleAddCard={this.handleAddCard} handleGameState={this.handleGameState} handleDeleteCard={this.handleDeleteCard} handleDeleteCategory={this.handleDeleteCategory} jwt={this.props.jwt}/> : null}\n\n                        {this.state.favList ? <FavList handleDeleteCard={this.handleDeleteCard} user={this.props.user} jwt={this.props.jwt}/> : null}\n                    </>\n                    }\n\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default MainContainer\n","/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/components/FavList.js",["26"],"import React from 'react'\nimport FlashCard from './FlashCard'\n\nclass FavList extends React.Component{\n\n    state ={\n        favCards: []\n    }\n\n    handleDeleteCardInFavList = (cardId) => {\n        this.props.handleDeleteCard(cardId)\n        let newFavCards = [...this.state.favCards]\n        const matchedIndex = newFavCards.findIndex(card => card.id ===cardId)\n        newFavCards.splice(matchedIndex,1)\n        this.setState({favCards: newFavCards})\n    }\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/users/${this.props.user.id}`, {\n            method: \"GET\",\n            headers: {Authorization: `Bearer ${this.props.jwt}`}\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            const favCards = []\n            data.user.categories.forEach(category => {\n                category.cards.map(card => {\n                    if (card.is_starred) favCards.push(card)\n                })\n            });\n            this.setState({favCards: favCards})\n        })\n        .catch(err => console.log(err))\n    }\n\n    renderCards =() => {\n        return(\n            this.state.favCards.map(card => <FlashCard handleDeleteCard={this.handleDeleteCardInFavList} jwt={this.props.jwt} key={card.id} card={card} parentIsFavList={true} /> )\n        )\n    }\n\n    render () {\n        return (\n            <div classname=\"fav-list-container\">\n            {this.renderCards()}\n            </div>\n        )\n    }\n}\nexport default FavList\n\n\n","/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/components/FlashCard.js",[],"/Users/chun/Flatiron/react/mod4-project/flash-flip-client/src/containers/CardContainer.js",[],{"ruleId":"27","severity":1,"message":"28","line":6,"column":8,"nodeType":"29","messageId":"30","endLine":6,"endColumn":15},{"ruleId":"27","severity":1,"message":"31","line":6,"column":10,"nodeType":"29","messageId":"30","endLine":6,"endColumn":16},{"ruleId":"32","severity":1,"message":"33","line":27,"column":41,"nodeType":"34","messageId":"35","endLine":27,"endColumn":43},"no-unused-vars","'FavList' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]